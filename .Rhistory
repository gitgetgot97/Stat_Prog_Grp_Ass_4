rb <- function(th,k=2) {
k*(th[2]-th[1]Ë2)Ë2 + (1-th[1])Ë2
}
k*(th[2]-th[1]^2)^2 + (1-th[1])^2
rb <- function(th,k=2) {
k*(th[2]-th[1]^2)^2 + (1-th[1])^2
}
rb(th)
rb(th)
th <- 5
rb(th)
th_1 <- c(5,1)
rb(th)
rb(th_1)
th_1 <- c(2,1)
rb(th_1)
gb <- function(th,k=2) {
c(-2*(1-th[1])-k*4*th[1]*(th[2]-th[1]^2),k*2*(th[2]-th[1]^2))
}
gb(th_1)
## hb returns the hessian of hb
hb <- function(th,k=2) {
h <- matrix(0,2,2)
h[1,1] <- 2-k*2*(2*(th[2]-th[1]^2) - 4*th[1]^2)
h[2,2] <- 2*k
h[1,2] <- h[2,1] <- -4*k*th[1]
h
}
hb(th_1)
rb
D(rb(th_1),'th_1[1]')
D(rb(th),'th_1[1]')
D(rb(th_1),'th_1[1]')
D(rb(th_1),'th_1[2]')
gb(th_1)
D(sin(x) ~ x)
D(sin(x) ~ x)
g <- D(x^2 ~ x)
g(1)
f = expression(x^2 + 5*x + 1)
# Derivative
cat("Using deriv() function:\n")
print(deriv(f, "x"))
deriv(f, "x")
cat("\nUsing D() function:\n")
print(D(f, 'x'))
# Derivative
cat("Using deriv() function:\n")
deriv(f, "x")
D(f, 'x')
D(f, 'x')(2)
D(f, 'x')(2)
D(f, 'x')
eval(D(f,'x'))
x <- 1
eval(D(f,'x'))
eval(f)
rb <- function(th,k=2) {
k*(th[2]-th[1]^2)^2 + (1-th[1])^2
}
th <- c(2,1)
rb(th1)
rb(th)
gb(th1)
gb(th)
hb(th)
rb
th <- c(2,2)
eval(rb)
D(rb(th),'th[1]')
D(rb(th),'th')
D(rb(th))
D(rb(th),1)
D(rb(th),'1')
rb <- function(th,k=2) {
k*(th[2]-th[1]^2)^2 + (1-th[1])^2
}
th <- c(2,1)
rb(th)
th_1 <- c(4,1)
rb(th); rb(th_1)
D(rb(th),'th[1]')
deriv(rb, "th[1]")
## Differentiate rb wrt th[1]
D(rb,'th[1]')
## Differentiate rb wrt th[1]
D(rb,'th[1]')
deriv(rb(th_1), "th[1]")
gb(th)
rb <- function(th,k=2) {
k*(th[2]-th[1]^2)^2 + (1-th[1])^2
}
## Check the function for different theta vectors
th <- c(2,1)
th_1 <- c(4,1)
rb(th); rb(th_1)
deriv(rb(th_1), "th[1]")
eval(deriv(rb(th_1), "th[1]"))
View(gb)
gb(th)
hb(th)
hb(th); hb(th_1)
gb(th); gb(th_1)
eval(rb)
f = expression(x^2 + 5*x + 1)
deriv(f, 'x')
x <- 1
eval(f)
eval(deriv(f,'x'))
f = expression(x^2 + 5*x + 4)
deriv(f, 'x')
x <- 1
eval(f)
eval(deriv(f,'x'))
eval(deriv(f,'x'))[1]
eval(f)
eval(deriv(f,'x'))[1]
eval(f)
eval(deriv(f,'x'))[1]
eval(deriv(f,'x'))[2]
eval(deriv(f,'x'))# [2]
eval(deriv(f,'x'))[1,]
eval(deriv(f,'x'))
eval(f)
eval(deriv(f,'x'))
eval(deriv(f,'x'),2)
eval(deriv(f,'x'))
# A more simple example in one variable
f = expression(x^2 + 5*x + 4)
deriv(f, 'x')
x <- 1
eval(f)
eval(deriv(f,'x'))
eval(deriv(deriv(f,'x')'x'))
deriv(deriv(f,'x')'x')
deriv(deriv(f,'x'),'x')
deriv(f, 'x')
deriv(f, 'x').value
deriv(f, 'x').value()
deriv(f, 'x')
deriv(f, 'x')
deriv(f, 'x')[1]
deriv(f, 'x')[1]['Value']
deriv(f, 'x')[1]['value']
deriv(f, 'x')[1].value
deriv(f, 'x')
deriv(f, 'x')
deriv(f, 'x').grad
deriv(f, 'x').grad()
deriv(f, 'x').grad[]
deriv(f, 'x')
grad(deriv(f, 'x'))
deriv(f, 'x')
deriv(f, 'x')$grad
deriv(f, 'x').grad
deriv(f, 'x')
deriv(f, 'x')$value
deriv(f, 'x')[value]
deriv(f, 'x')['value']
deriv(f, 'x')
eval(deriv(rb(th_1), "th[1]"))
deriv(rb(th_1), "th[1]")
## Check the function for different theta vectors
th <- c(2,1)
th_1 <- c(4,1)
rb(th); rb(th_1)
deriv(rb(th1), "th[1]")
deriv(rb(th), "th[1]")
deriv(rb(th), th[1])
deriv(rb(th), "th[2]")
